/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.aprioricafe.gui.staff;

import com.aldoapp.swingboot.BeanProvider;
import com.aldoapp.swingboot.entities.Role;
import com.aldoapp.swingboot.entities.User;
import com.aldoapp.swingboot.helpers.TimeHelper;
import com.aldoapp.swingboot.repositories.RoleRepository;
import com.aprioricafe.repositories.StaffRepository;
import com.aldoapp.swingboot.repositories.UserRepository;
import com.aprioricafe.entities.Staff;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Locale;
import javax.swing.JOptionPane;
import org.mindrot.jbcrypt.BCrypt;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Transactional;

/**
 *
 * @author aldo
 */
public class InputStaffDlg extends javax.swing.JDialog {

    /**
     * @return the user
     */
    public User getUser() {
        return user;
    }

    /**
     * @param user the user to set
     */
    public void setUser(User user) {
        this.user = user;
    }

    /**
     * @return the entity
     */
    public Staff getEntity() {
        return entity;
    }

    /**
     * @param entity the entity to set
     */
    public void setEntity(Staff entity) {
        this.entity = entity;
    }
    private Staff entity;
    private User user;
    private long selectedID;
    
    
    @Autowired
    UserRepository userRepository;
    
    @Autowired
    RoleRepository roleRepository;
    
    @Autowired
    StaffRepository staffRepository;
    
    /**
     * Creates new form InputStaffDlg
     */
    public InputStaffDlg() {
        BeanProvider.autowire(this); //use someRepository somewhere after this line.
        initComponents();
        setModal(true);
        Locale locale = new Locale("in", "ID");

        birthDate.setLocale(locale);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCode = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        rbMale = new javax.swing.JRadioButton();
        rbFemale = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        birthDate = new com.github.lgooddatepicker.components.DatePicker();
        jLabel6 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Input Karyawan");

        jLabel1.setText("Nama");

        jLabel2.setText("Kode Pegawai");

        jLabel3.setText("Alamat");

        txtAddress.setColumns(20);
        txtAddress.setRows(5);
        jScrollPane1.setViewportView(txtAddress);

        jLabel4.setText("Jenis Kelamin");

        buttonGroup1.add(rbMale);
        rbMale.setSelected(true);
        rbMale.setText("Laki-laki");
        rbMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMaleActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbFemale);
        rbFemale.setText("Perempuan");
        rbFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbFemaleActionPerformed(evt);
            }
        });

        jLabel5.setText("Tanggal Lahir");

        jLabel6.setText("Email");

        jLabel7.setText("No Telpon");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel8.setText("Password");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCode, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSave, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(birthDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(rbMale)
                        .addGap(28, 28, 28)
                        .addComponent(rbFemale))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                    .addComponent(txtPhone)
                    .addComponent(txtPassword))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbMale)
                    .addComponent(rbFemale)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(birthDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(btnSave)
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbMaleActionPerformed

    private void rbFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbFemaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbFemaleActionPerformed
    
    @Transactional
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if(!validateInputs()){
            return;
        }
        //https://stackoverflow.com/a/50515537/1225672
        try{
            String hash = BCrypt.hashpw(txtPassword.getText(),BCrypt.gensalt());
            if(getEntity()==null){
                setEntity(new Staff());
                var createdAt = TimeHelper.getCurrentTimestamp();
                getEntity().setCreatedAt(createdAt);
                
                setUser(new User());
                getUser().setCreatedAt(createdAt);
                
                getEntity().setUser(getUser());    
            }else {
                var updatedAt = TimeHelper.getCurrentTimestamp();                
                getEntity().setUpdatedAt(updatedAt);
                
                getUser().setUpdatedAt(updatedAt);
            }
            getUser().setUsername(txtCode.getText());                
            getUser().setFullName(txtName.getText());
            getUser().setPassword(hash);
            HashSet<Role> roles = new HashSet<Role>();           
            var xrole = roleRepository.findById(Role.OPERATOR);
            roles.add(xrole.get());            
            getUser().setRoles(roles);
            
            getEntity().setAddress(txtAddress.getText());
            getEntity().setBirthDate(birthDate.getDate());
            getEntity().setEmail(txtEmail.getText());
            if(rbMale.isSelected()){
                getEntity().setGender("male");
            }else{
                getEntity().setGender("female");
            }
            getEntity().setPhoneNo(txtPhone.getText());
            
            User saved = userRepository.save(getUser());
            if(saved!=null){            
                Staff savedStaff = staffRepository.save(getEntity());
                if(savedStaff!=null){
                    JOptionPane.showMessageDialog(null, "Data Tersimpan");   
                }
                clearFields();
                dispose();
            }else{
                JOptionPane.showMessageDialog(null, "Data Tidak Tersimpan");
            }
            
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Data Tidak Tersimpan. "+ex.getMessage());
        }
        
    }//GEN-LAST:event_btnSaveActionPerformed
    private boolean validateInputs(){
        boolean res = true;        
        
        List<String> errors = new ArrayList();
        if(txtName.getText().trim().length()==0){
            errors.add("Masukkan nama");            
        }
        if(txtCode.getText().trim().length()==0){
            errors.add( "Masukkan kode");                    
        }
        if(txtAddress.getText().trim().length()==0){
            errors.add( "Masukkan alamat");            
        }
        if(birthDate.getDate()==null){
            errors.add( "Masukkan tanggal lahir");            
        }
        if(txtEmail.getText().trim().length()==0){
            errors.add( "Masukkan email");            
        }
        if(txtPhone.getText().trim().length()==0){
            errors.add( "Masukkan no telpon");            
        }
        if(txtPassword.getText().trim().length()==0){
            errors.add( "Masukkan password");            
        }
                        
        if(!errors.isEmpty()){
            JOptionPane.showMessageDialog(null, String.join("\n", errors));
            return false;
        }
        return res;
    }
    private void clearFields() {
        
        txtName.setText("");
        txtCode.setText("");
        txtAddress.setText("");
        txtEmail.setText("");
        txtPhone.setText("");
        txtPassword.setText("");

    }
    public static Staff showModal(Staff currentItem) {
        
        InputStaffDlg dialog = new InputStaffDlg();
        dialog.pack();
        dialog.setLocationRelativeTo(null);
        dialog.setTitle("Tambah Pegawai");
        if(currentItem!=null){
            dialog.setTitle("Edit Pegawai");
            dialog.setEntity(currentItem);
            User userx = currentItem.getUser();
            
            dialog.setUser(userx);
            dialog.txtCode.setText(userx.getUsername());
            dialog.txtName.setText(userx.getFullName());
            dialog.txtAddress.setText(currentItem.getAddress());
            dialog.txtEmail.setText(currentItem.getEmail());
            dialog.txtPhone.setText(currentItem.getPhoneNo());
            dialog.birthDate.setDate(currentItem.getBirthDate());
        }
        
        dialog.setVisible(true);
        dialog.toFront();
        dialog.requestFocus();
        return dialog.getEntity();
        //System.exit(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.github.lgooddatepicker.components.DatePicker birthDate;
    private javax.swing.JButton btnSave;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbFemale;
    private javax.swing.JRadioButton rbMale;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables
}
